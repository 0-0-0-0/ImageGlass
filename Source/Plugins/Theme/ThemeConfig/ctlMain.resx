<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picPreview.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADrwAAA68AZW8ckkAAAApSURBVDhPY/j3758vPrxq1SpffJhh1ADf4RAGhOKZUDQz
        jBrgOwzCAABrd8kfuf29fwAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>