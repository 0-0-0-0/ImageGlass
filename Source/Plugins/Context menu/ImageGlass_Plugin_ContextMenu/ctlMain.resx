<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>